/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SetTopBox as PrismaSetTopBox } from "@prisma/client";

export class SetTopBoxServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SetTopBoxCountArgs, "select">
  ): Promise<number> {
    return this.prisma.setTopBox.count(args);
  }

  async setTopBoxes(
    args: Prisma.SetTopBoxFindManyArgs
  ): Promise<PrismaSetTopBox[]> {
    return this.prisma.setTopBox.findMany(args);
  }
  async setTopBox(
    args: Prisma.SetTopBoxFindUniqueArgs
  ): Promise<PrismaSetTopBox | null> {
    return this.prisma.setTopBox.findUnique(args);
  }
  async createSetTopBox(
    args: Prisma.SetTopBoxCreateArgs
  ): Promise<PrismaSetTopBox> {
    return this.prisma.setTopBox.create(args);
  }
  async updateSetTopBox(
    args: Prisma.SetTopBoxUpdateArgs
  ): Promise<PrismaSetTopBox> {
    return this.prisma.setTopBox.update(args);
  }
  async deleteSetTopBox(
    args: Prisma.SetTopBoxDeleteArgs
  ): Promise<PrismaSetTopBox> {
    return this.prisma.setTopBox.delete(args);
  }
}
